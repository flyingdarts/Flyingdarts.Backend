name: "Build, test, deploy-function"
on:
  push:
    branches: [ main ]
jobs:
  Publish-Functions:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        functionName: 
         - 'Flyingdarts-Signalling-OnConnect'
         - 'Flyingdarts-Signalling-OnDisconnect'
         - 'Flyingdarts-Signalling-OnDefault'
         - 'Flyingdarts-Rooms-OnCreate'
         - 'Flyingdarts-Rooms-OnJoin'
         - 'Flyingdarts-Rooms-OnLeave'
         - 'Flyingdarts-Games-X01-OnScore'
         - 'Flyingdarts-Games-X01-OnQueue'

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Build with dotnet
        run: dotnet build --configuration Release
      - name: Install Amazon.Lambda.Tools
        run: |
          dotnet tool install -g Amazon.Lambda.Tools
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_OIDC_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Deploy function
        working-directory: ${{ matrix.functionName }}
        run: |
          dotnet lambda deploy-function --function-name ${{ matrix.functionName }} --function-runtime dotnet6 --region eu-west-1 --self-contained true 

        id: function-deploy
      - name: action-slack
        if: failure() && steps.function-deploy.outcome != 'success'
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ steps.function-deploy.outcome }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: action-slack
        if: success() && steps.function-deploy.outcome == 'success'
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,commit,repo,author
          custom_payload: |
            {
              attachments: [{
                color: 'good',
                text: `${process.env.AS_WORKFLOW}\n${{matrix.functionName}}\nSuccessfully deployed ${process.env.AS_COMMIT}\n${process.env.AS_AUTHOR}`
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          
