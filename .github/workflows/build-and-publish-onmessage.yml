on:
  push:
    branches: [ main ]
  workflow_dispatch:
    branches: [ main ]

name: "Build and publish - OnMessage"

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      PROJECT: ./Dockerfile.OnMessage
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: flyingdarts/signalling.onmessage
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -f $PROJECT -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Notify discord
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        DISCORD_USERNAME: "${{ github.event.sender.login }}"
        DISCORD_AVATAR: "${{ github.event.sender.avatar_url }}"
      uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
      with: 
        args: 'Workflow {{ EVENT_PAYLOAD.workflow }} for repository: {{ EVENT_PAYLOAD.repository.name }} has run successfully.'
