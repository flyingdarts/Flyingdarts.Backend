on:
  push:
    branches: [ main ]
  workflow_dispatch:
    branches: [ main ]

name: "Workflow Api"

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      PROJECT: ./Dockerfile.OnConnect
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Checkout submodule
      run: git submodule update --init --recursive

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '7.0.x'

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
  
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.SECRET_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: 'iyltdsu-stacks-development-websockets-repository22e53bbd-guwxdqj33b0u'
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and push it to ECR 
        # Registry is hosting docker images in 
        # the specific service is ECR(Elastic Container Registry)
        # iyltdsu-stacks-development-websockets-repository22e53bbd-guwxdqj33b0u
        # iyltdsu-stacks-development-websockets-repository22e53bbd-guwxdqj33b0u

        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:latest"
    - name: Notify discord
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        DISCORD_USERNAME: "${{ github.event.sender.login }}"
        DISCORD_AVATAR: "${{ github.event.sender.avatar_url }}"
      uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
      with: 
        args: 'Workflow {{ EVENT_PAYLOAD.workflow }} for repository: {{ EVENT_PAYLOAD.repository.name }} has run successfully.'
